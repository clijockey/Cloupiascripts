<?xml version="1.0" ?><OrchExportInfo><Time>Thu Jan 28 16:53:27 UTC 2016</Time><User></User><Comments>A collection of Spark tasks.</Comments><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"Spark_messages_delete","taskLabel":"Delete Message from Spark","isActive":true,"taskSummary":"Delete a message to a Spark room.\n","taskDescription":"Delete a message to a room.\n\nDelete a plain text message, and optionally a media content attachment, to a room.\n\n","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 4 inputs\r\n   token (Label: \'token\', Type: text, MappableType: gen_text_input)\r\n   messageId (Label: \'Spark Message Id\', Type: text, MappableType: gen_text_input)\r\n   proxyHost (Label: \'proxyHost\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'proxyPort\', Type: text, MappableType: gen_text_input)\r\n\r\nTask contains 0 outputs\r\n\r\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"Spark_membership_create","taskLabel":"Add Spark user to room","isActive":true,"taskSummary":"Add a user to a Spark room\n","taskDescription":"Add a user to a Spark room\n\n","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 6 inputs\r\n   token (Label: \'token\', Type: text, MappableType: gen_text_input)\r\n   roomId (Label: \'roomId\', Type: text, MappableType: gen_text_input)\r\n   person (Label: \'person\', Type: text, MappableType: gen_text_input)\r\n   moderator (Label: \'moderator\', Type: number, MappableType: )\r\n   proxyHost (Label: \'proxyHost\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'proxyPort\', Type: text, MappableType: gen_text_input)\r\n\r\nTask contains 1 outputs\r\n   membershipId (Description: \'membershipId\', Type: gen_text_input)\r\n\r\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"Spark_room_create","taskLabel":"Create Room in Spark","isActive":true,"taskSummary":"Create a Spark room\n","taskDescription":"Create a Spark room\n","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 5 inputs\r\n   token (Label: \'token\', Type: text, MappableType: gen_text_input)\r\n   title (Label: \'title\', Type: text, MappableType: gen_text_input)\r\n   proxyHost (Label: \'proxyHost\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'proxyPort\', Type: text, MappableType: gen_text_input)\r\n   rollback (Label: \'rollback\', Type: number, MappableType: )\r\n\r\nTask contains 1 outputs\r\n   roomId (Description: \'\', Type: gen_text_input)\r\n\r\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"Spark_room_delete","taskLabel":"Delete Room in Spark","isActive":true,"taskSummary":"Delete a Spark room\n","taskDescription":"Delete a Spark room\n","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 4 inputs\r\n   token (Label: \'token\', Type: text, MappableType: gen_text_input)\r\n   roomId (Label: \'roomId\', Type: text, MappableType: gen_text_input)\r\n   proxyHost (Label: \'proxyHost\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'proxyPort\', Type: text, MappableType: gen_text_input)\r\n\r\nTask contains 0 outputs\r\n\r\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"Spark_room_details","taskLabel":"Details from Spark room","isActive":true,"taskSummary":"Details of Spark room\n","taskDescription":"Details of a Spark room\n","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 4 inputs\r\n   token (Label: \'token\', Type: text, MappableType: gen_text_input)\r\n   roomId (Label: \'roomId\', Type: text, MappableType: gen_text_input)\r\n   proxyHost (Label: \'proxyHost\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'proxyPort\', Type: text, MappableType: gen_text_input)\r\n\r\nTask contains 4 outputs\r\n   title (Description: \'title\', Type: gen_text_input)\r\n   created (Description: \'created\', Type: gen_text_input)\r\n   lastActivity (Description: \'lastActivity\', Type: gen_text_input)\r\n   sipAddress (Description: \'sipAddress\', Type: gen_text_input)\r\n\r\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"Spark_messages_create","taskLabel":"Create message in Spark room","isActive":true,"taskSummary":"Post a message to a Spark room.\n","taskDescription":"Post a message to a room.\n\nPosts a plain text message, and optionally a media content attachment, to a room.\n\n","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 7 inputs\r\n   token (Label: \'token\', Type: text, MappableType: gen_text_input)\r\n   message (Label: \'Message\', Type: text, MappableType: gen_text_input)\r\n   roomId (Label: \'Spark Room Id\', Type: text, MappableType: gen_text_input)\r\n   file (Label: \'file\', Type: text, MappableType: gen_text_input)\r\n   proxyHost (Label: \'proxyHost\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'proxyPort\', Type: text, MappableType: gen_text_input)\r\n   rollback (Label: \'rollback\', Type: number, MappableType: )\r\n\r\nTask contains 1 outputs\r\n   messageId (Description: \'messageId\', Type: gen_text_input)\r\n\r\n","taskData":"eyJuYW1lIjoiU3BhcmtfbWVzc2FnZXNfY3JlYXRlIiwibGFiZWwiOiJDcmVhdGUgbWVzc2FnZSBpbiBTcGFyayByb29tIiwicmVnaXN0ZXJVbmRlclRyZWUiOiJTcGFyayIsImlzQWN0aXZlIjp0cnVlLCJzdW1tYXJ5IjoiUG9zdCBhIG1lc3NhZ2UgdG8gYSBTcGFyayByb29tLlxuIiwiZGVzY3JpcHRpb24iOiJQb3N0IGEgbWVzc2FnZSB0byBhIHJvb20uXG5cblBvc3RzIGEgcGxhaW4gdGV4dCBtZXNzYWdlLCBhbmQgb3B0aW9uYWxseSBhIG1lZGlhIGNvbnRlbnQgYXR0YWNobWVudCwgdG8gYSByb29tLlxuXG4iLCJ1Y3NkRnJvbVZlcnNpb24iOiI1LjQuMC4xIiwiY29uZmlnIjp7Im5hbWUiOiJJbnB1dENvbmZpZyIsImZpZWxkcyI6eyJsaXN0IjpbeyJuYW1lIjoidG9rZW4iLCJsYWJlbCI6InRva2VuIiwicGVyc2lzdCI6dHJ1ZSwiY29sdW1uSW5mbyI6bnVsbCwidHlwZSI6InRleHQiLCJtYXBUb1R5cGUiOiJnZW5fdGV4dF9pbnB1dCIsIm1hbmRhdG9yeSI6dHJ1ZSwicmJpZCI6IiIsInNpemUiOiJtZWRpdW0iLCJoZWxwIjoiIiwiYW5ub3RhdGlvbiI6IiIsImdyb3VwIjoiIiwidmFsaWRhdGUiOmZhbHNlLCJmb3JtTWFuYWdlZFRhYmxlIjpmYWxzZSwiYWRkRW50cnlGb3JtIjoiIiwiZWRpdEVudHJ5Rm9ybSI6IiIsImRlbGV0ZUVudHJ5Rm9ybSI6IiIsIm1vdmVVcEZvcm0iOiIiLCJtb3ZlRG93bkZvcm0iOiIiLCJpbmZvRW50cnlGb3JtIjoiIiwicnVuQWN0aW9uRm9ybSI6IiIsImVkaXRhYmUiOnRydWUsImhpZGRlbiI6ZmFsc2UsIm11bHRpbGluZSI6ZmFsc2UsIm1heExlbmd0aCI6MTI4LCJsb3YiOiIiLCJsb3ZQcm92aWRlciI6IiIsIm9yZGVyIjo5OTk5OSwidXBsb2FkRGlyIjoiIiwidGFibGUiOiIiLCJ2YWxpZGF0b3IiOiIiLCJyZWdleCI6Ii4qIiwicmVnZXhMYWJlbCI6Ii4qIiwibWluVmFsdWUiOi05MjIzMzcyMDM2ODU0Nzc1ODA4LCJtYXhWYWx1ZSI6OTIyMzM3MjAzNjg1NDc3NTgwNywiaGlkZUZpZWxkTmFtZSI6IiIsImhpZGVGaWVsZFZhbHVlIjoiIiwiaGlkZUZpZWxkQ29uZGl0aW9uIjoiRVEiLCJodG1sUG9wdXBUYWciOiIiLCJodG1sUG9wdXBMYWJlbCI6IiIsImh0bWxQb3B1cFN0eWxlIjowLCJodG1sUG9wdXBUZXh0IjoiIiwidmlldyI6IiIsInZhbHVlcyI6W119LHsibmFtZSI6Im1lc3NhZ2UiLCJsYWJlbCI6Ik1lc3NhZ2UiLCJwZXJzaXN0Ijp0cnVlLCJjb2x1bW5JbmZvIjpudWxsLCJ0eXBlIjoidGV4dCIsIm1hcFRvVHlwZSI6Imdlbl90ZXh0X2lucHV0IiwibWFuZGF0b3J5Ijp0cnVlLCJyYmlkIjoiIiwic2l6ZSI6Im1lZGl1bSIsImhlbHAiOiIiLCJhbm5vdGF0aW9uIjoiIiwiZ3JvdXAiOiIiLCJ2YWxpZGF0ZSI6ZmFsc2UsImZvcm1NYW5hZ2VkVGFibGUiOmZhbHNlLCJhZGRFbnRyeUZvcm0iOiIiLCJlZGl0RW50cnlGb3JtIjoiIiwiZGVsZXRlRW50cnlGb3JtIjoiIiwibW92ZVVwRm9ybSI6IiIsIm1vdmVEb3duRm9ybSI6IiIsImluZm9FbnRyeUZvcm0iOiIiLCJydW5BY3Rpb25Gb3JtIjoiIiwiZWRpdGFiZSI6dHJ1ZSwiaGlkZGVuIjpmYWxzZSwibXVsdGlsaW5lIjp0cnVlLCJtYXhMZW5ndGgiOjUxMiwibG92IjoiIiwibG92UHJvdmlkZXIiOiIiLCJvcmRlciI6OTk5OTksInVwbG9hZERpciI6IiIsInRhYmxlIjoiIiwidmFsaWRhdG9yIjoiIiwicmVnZXgiOiIuKiIsInJlZ2V4TGFiZWwiOiIuKiIsIm1pblZhbHVlIjotOTIyMzM3MjAzNjg1NDc3NTgwOCwibWF4VmFsdWUiOjkyMjMzNzIwMzY4NTQ3NzU4MDcsImhpZGVGaWVsZE5hbWUiOiIiLCJoaWRlRmllbGRWYWx1ZSI6IiIsImhpZGVGaWVsZENvbmRpdGlvbiI6IkVRIiwiaHRtbFBvcHVwVGFnIjoiIiwiaHRtbFBvcHVwTGFiZWwiOiIiLCJodG1sUG9wdXBTdHlsZSI6MCwiaHRtbFBvcHVwVGV4dCI6IlRoZSBlbWFpbCBhZGRyZXNzIG9mIHRoZSBwZXJzb24geW91IHdvdWxkIGxpa2UgdG8gYWRkIHRvIGEgU3BhcmsgZ3JvdXAuIiwidmlldyI6IiIsInZhbHVlcyI6W119LHsibmFtZSI6InJvb21JZCIsImxhYmVsIjoiU3BhcmsgUm9vbSBJZCIsInBlcnNpc3QiOnRydWUsImNvbHVtbkluZm8iOm51bGwsInR5cGUiOiJ0ZXh0IiwibWFwVG9UeXBlIjoiZ2VuX3RleHRfaW5wdXQiLCJtYW5kYXRvcnkiOnRydWUsInJiaWQiOiIiLCJzaXplIjoibWVkaXVtIiwiaGVscCI6IiIsImFubm90YXRpb24iOiIiLCJncm91cCI6IiIsInZhbGlkYXRlIjpmYWxzZSwiZm9ybU1hbmFnZWRUYWJsZSI6ZmFsc2UsImFkZEVudHJ5Rm9ybSI6IiIsImVkaXRFbnRyeUZvcm0iOiIiLCJkZWxldGVFbnRyeUZvcm0iOiIiLCJtb3ZlVXBGb3JtIjoiIiwibW92ZURvd25Gb3JtIjoiIiwiaW5mb0VudHJ5Rm9ybSI6IiIsInJ1bkFjdGlvbkZvcm0iOiIiLCJlZGl0YWJlIjp0cnVlLCJoaWRkZW4iOmZhbHNlLCJtdWx0aWxpbmUiOmZhbHNlLCJtYXhMZW5ndGgiOjEyOCwibG92IjoiIiwibG92UHJvdmlkZXIiOiIiLCJvcmRlciI6OTk5OTksInVwbG9hZERpciI6IiIsInRhYmxlIjoiIiwidmFsaWRhdG9yIjoiIiwicmVnZXgiOiIuKiIsInJlZ2V4TGFiZWwiOiIuKiIsIm1pblZhbHVlIjotOTIyMzM3MjAzNjg1NDc3NTgwOCwibWF4VmFsdWUiOjkyMjMzNzIwMzY4NTQ3NzU4MDcsImhpZGVGaWVsZE5hbWUiOiIiLCJoaWRlRmllbGRWYWx1ZSI6IiIsImhpZGVGaWVsZENvbmRpdGlvbiI6IkVRIiwiaHRtbFBvcHVwVGFnIjoiIiwiaHRtbFBvcHVwTGFiZWwiOiIiLCJodG1sUG9wdXBTdHlsZSI6MCwiaHRtbFBvcHVwVGV4dCI6IiIsInZpZXciOiIiLCJ2YWx1ZXMiOltdfSx7Im5hbWUiOiJmaWxlIiwibGFiZWwiOiJmaWxlIiwicGVyc2lzdCI6dHJ1ZSwiY29sdW1uSW5mbyI6bnVsbCwidHlwZSI6InRleHQiLCJtYXBUb1R5cGUiOiJnZW5fdGV4dF9pbnB1dCIsIm1hbmRhdG9yeSI6ZmFsc2UsInJiaWQiOiIiLCJzaXplIjoibWVkaXVtIiwiaGVscCI6IiIsImFubm90YXRpb24iOiIiLCJncm91cCI6IiIsInZhbGlkYXRlIjpmYWxzZSwiZm9ybU1hbmFnZWRUYWJsZSI6ZmFsc2UsImFkZEVudHJ5Rm9ybSI6IiIsImVkaXRFbnRyeUZvcm0iOiIiLCJkZWxldGVFbnRyeUZvcm0iOiIiLCJtb3ZlVXBGb3JtIjoiIiwibW92ZURvd25Gb3JtIjoiIiwiaW5mb0VudHJ5Rm9ybSI6IiIsInJ1bkFjdGlvbkZvcm0iOiIiLCJlZGl0YWJlIjp0cnVlLCJoaWRkZW4iOmZhbHNlLCJtdWx0aWxpbmUiOmZhbHNlLCJtYXhMZW5ndGgiOjEyOCwibG92IjoiIiwibG92UHJvdmlkZXIiOiIiLCJvcmRlciI6OTk5OTksInVwbG9hZERpciI6IiIsInRhYmxlIjoiIiwidmFsaWRhdG9yIjoiIiwicmVnZXgiOiIuKiIsInJlZ2V4TGFiZWwiOiIuKiIsIm1pblZhbHVlIjotOTIyMzM3MjAzNjg1NDc3NTgwOCwibWF4VmFsdWUiOjkyMjMzNzIwMzY4NTQ3NzU4MDcsImhpZGVGaWVsZE5hbWUiOiIiLCJoaWRlRmllbGRWYWx1ZSI6IiIsImhpZGVGaWVsZENvbmRpdGlvbiI6IkVRIiwiaHRtbFBvcHVwVGFnIjoiIiwiaHRtbFBvcHVwTGFiZWwiOiIiLCJodG1sUG9wdXBTdHlsZSI6MCwiaHRtbFBvcHVwVGV4dCI6IiIsInZpZXciOiIiLCJ2YWx1ZXMiOltdfSx7Im5hbWUiOiJwcm94eUhvc3QiLCJsYWJlbCI6InByb3h5SG9zdCIsInBlcnNpc3QiOnRydWUsImNvbHVtbkluZm8iOm51bGwsInR5cGUiOiJ0ZXh0IiwibWFwVG9UeXBlIjoiZ2VuX3RleHRfaW5wdXQiLCJtYW5kYXRvcnkiOmZhbHNlLCJyYmlkIjoiIiwic2l6ZSI6Im1lZGl1bSIsImhlbHAiOiIiLCJhbm5vdGF0aW9uIjoiIiwiZ3JvdXAiOiIiLCJ2YWxpZGF0ZSI6ZmFsc2UsImZvcm1NYW5hZ2VkVGFibGUiOmZhbHNlLCJhZGRFbnRyeUZvcm0iOiIiLCJlZGl0RW50cnlGb3JtIjoiIiwiZGVsZXRlRW50cnlGb3JtIjoiIiwibW92ZVVwRm9ybSI6IiIsIm1vdmVEb3duRm9ybSI6IiIsImluZm9FbnRyeUZvcm0iOiIiLCJydW5BY3Rpb25Gb3JtIjoiIiwiZWRpdGFiZSI6dHJ1ZSwiaGlkZGVuIjpmYWxzZSwibXVsdGlsaW5lIjpmYWxzZSwibWF4TGVuZ3RoIjoxMjgsImxvdiI6IiIsImxvdlByb3ZpZGVyIjoiIiwib3JkZXIiOjk5OTk5LCJ1cGxvYWREaXIiOiIiLCJ0YWJsZSI6IiIsInZhbGlkYXRvciI6IiIsInJlZ2V4IjoiLioiLCJyZWdleExhYmVsIjoiLioiLCJtaW5WYWx1ZSI6LTkyMjMzNzIwMzY4NTQ3NzU4MDgsIm1heFZhbHVlIjo5MjIzMzcyMDM2ODU0Nzc1ODA3LCJoaWRlRmllbGROYW1lIjoiIiwiaGlkZUZpZWxkVmFsdWUiOiIiLCJoaWRlRmllbGRDb25kaXRpb24iOiJFUSIsImh0bWxQb3B1cFRhZyI6IiIsImh0bWxQb3B1cExhYmVsIjoiIiwiaHRtbFBvcHVwU3R5bGUiOjAsImh0bWxQb3B1cFRleHQiOiIiLCJ2aWV3IjoiIiwidmFsdWVzIjpbXX0seyJuYW1lIjoicHJveHlQb3J0IiwibGFiZWwiOiJwcm94eVBvcnQiLCJwZXJzaXN0Ijp0cnVlLCJjb2x1bW5JbmZvIjpudWxsLCJ0eXBlIjoidGV4dCIsIm1hcFRvVHlwZSI6Imdlbl90ZXh0X2lucHV0IiwibWFuZGF0b3J5IjpmYWxzZSwicmJpZCI6IiIsInNpemUiOiJtZWRpdW0iLCJoZWxwIjoiIiwiYW5ub3RhdGlvbiI6IiIsImdyb3VwIjoiIiwidmFsaWRhdGUiOmZhbHNlLCJmb3JtTWFuYWdlZFRhYmxlIjpmYWxzZSwiYWRkRW50cnlGb3JtIjoiIiwiZWRpdEVudHJ5Rm9ybSI6IiIsImRlbGV0ZUVudHJ5Rm9ybSI6IiIsIm1vdmVVcEZvcm0iOiIiLCJtb3ZlRG93bkZvcm0iOiIiLCJpbmZvRW50cnlGb3JtIjoiIiwicnVuQWN0aW9uRm9ybSI6IiIsImVkaXRhYmUiOnRydWUsImhpZGRlbiI6ZmFsc2UsIm11bHRpbGluZSI6ZmFsc2UsIm1heExlbmd0aCI6MTI4LCJsb3YiOiIiLCJsb3ZQcm92aWRlciI6IiIsIm9yZGVyIjo5OTk5OSwidXBsb2FkRGlyIjoiIiwidGFibGUiOiIiLCJ2YWxpZGF0b3IiOiIiLCJyZWdleCI6Ii4qIiwicmVnZXhMYWJlbCI6Ii4qIiwibWluVmFsdWUiOi05MjIzMzcyMDM2ODU0Nzc1ODA4LCJtYXhWYWx1ZSI6OTIyMzM3MjAzNjg1NDc3NTgwNywiaGlkZUZpZWxkTmFtZSI6IiIsImhpZGVGaWVsZFZhbHVlIjoiIiwiaGlkZUZpZWxkQ29uZGl0aW9uIjoiRVEiLCJodG1sUG9wdXBUYWciOiIiLCJodG1sUG9wdXBMYWJlbCI6IiIsImh0bWxQb3B1cFN0eWxlIjowLCJodG1sUG9wdXBUZXh0IjoiIiwidmlldyI6IiIsInZhbHVlcyI6W119LHsibmFtZSI6InJvbGxiYWNrIiwibGFiZWwiOiJyb2xsYmFjayIsInBlcnNpc3QiOnRydWUsImNvbHVtbkluZm8iOm51bGwsInR5cGUiOiJudW1iZXIiLCJtYXBUb1R5cGUiOiIiLCJtYW5kYXRvcnkiOnRydWUsInJiaWQiOiIiLCJzaXplIjoibWVkaXVtIiwiaGVscCI6IiIsImFubm90YXRpb24iOiIiLCJncm91cCI6IiIsInZhbGlkYXRlIjpmYWxzZSwiZm9ybU1hbmFnZWRUYWJsZSI6ZmFsc2UsImFkZEVudHJ5Rm9ybSI6IiIsImVkaXRFbnRyeUZvcm0iOiIiLCJkZWxldGVFbnRyeUZvcm0iOiIiLCJtb3ZlVXBGb3JtIjoiIiwibW92ZURvd25Gb3JtIjoiIiwiaW5mb0VudHJ5Rm9ybSI6IiIsInJ1bkFjdGlvbkZvcm0iOiIiLCJlZGl0YWJlIjp0cnVlLCJoaWRkZW4iOmZhbHNlLCJtdWx0aWxpbmUiOmZhbHNlLCJtYXhMZW5ndGgiOjEyOCwibG92IjoiIiwibG92UHJvdmlkZXIiOiIiLCJvcmRlciI6OTk5OTksInVwbG9hZERpciI6IiIsInRhYmxlIjoiIiwidmFsaWRhdG9yIjoiIiwicmVnZXgiOiIuKiIsInJlZ2V4TGFiZWwiOiIuKiIsIm1pblZhbHVlIjotOTIyMzM3MjAzNjg1NDc3NTgwOCwibWF4VmFsdWUiOjkyMjMzNzIwMzY4NTQ3NzU4MDcsImhpZGVGaWVsZE5hbWUiOiIiLCJoaWRlRmllbGRWYWx1ZSI6IiIsImhpZGVGaWVsZENvbmRpdGlvbiI6IkVRIiwiaHRtbFBvcHVwVGFnIjoiIiwiaHRtbFBvcHVwTGFiZWwiOiIiLCJodG1sUG9wdXBTdHlsZSI6MCwiaHRtbFBvcHVwVGV4dCI6IiIsInZpZXciOiIiLCJ2YWx1ZXMiOltdfV0sIm1vVHlwZU5hbWUiOiJjb20uY2xvdXBpYS5zZXJ2aWNlLmNJTS5pbmZyYW1nci5tZHVpLk1EVUlGaWVsZERlc2NyIiwidmFsaWRhdG9yTmFtZSI6Ik1EVUlGaWVsZExpc3RWYWxpZGF0b3IifX0sIm91dHB1dHMiOnsibGlzdCI6W3sibmFtZSI6Im1lc3NhZ2VJZCIsImRlc2NyaXB0aW9uIjoibWVzc2FnZUlkIiwidHlwZSI6Imdlbl90ZXh0X2lucHV0In1dLCJtb1R5cGVOYW1lIjoiY29tLmNsb3VwaWEuc2VydmljZS5jSU0uaW5mcmFtZ3IubWR1aS5NRFVJV29ya2Zsb3dUYXNrT3V0cHV0RGVzY3IiLCJ2YWxpZGF0b3JOYW1lIjoiTURVSU91dHB1dExpc3RWYWxpZGF0b3IifSwiZXhlY3V0aW9uTGFuZyI6IkphdmFzY3JpcHQiLCJleGVjdXRpb25TY3JpcHQiOiIvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG4vLyBUaXRsZTogICAgICAgICAgICAgICBTcGFya19tZXNzYWdlc19wb3N0XG4vLyBEZXNjcmlwdGlvbjogICAgICAgICBUaGlzIHdpbGwgcG9zdCBhIG1lc3NhZ2UgdG8gYSBzcGVjaWZpYyBzcGFyayBncm91cFxuLy9cbi8vIEF1dGhvcjogICAgICAgICAgICAgIFJvYiBFZHdhcmRzIChAY2xpam9ja2V5L3JvYmVkd2FAY2lzY28uY29tKVxuLy8gRGF0ZTogICAgICAgICAgICAgICAgMTgvMTIvMjAxNVxuLy8gVmVyc2lvbjogICAgICAgICAgICAgMS4zICh1cGRhdGVkIDI3LzAxLzIwMTYpXG4vLyBEZXBlbmRlbmNpZXM6XG4vLyBMaW1pdGF0aW9ucy9pc3N1ZXM6ICBVcGRhdGVkIGZvciBVQ1NEIDUuNCBhbmQgdGVzdGVkIG9uIDUuNC4wLjFcbi8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cblxuaW1wb3J0UGFja2FnZShqYXZhLnV0aWwpO1xuaW1wb3J0UGFja2FnZShqYXZhLmxhbmcpO1xuaW1wb3J0UGFja2FnZShqYXZhLmlvKTtcbmltcG9ydFBhY2thZ2UoY29tLmNsb3VwaWEubGliLnV0aWwpO1xuaW1wb3J0UGFja2FnZShvcmcuYXBhY2hlLmNvbW1vbnMuaHR0cGNsaWVudCk7XG5pbXBvcnRQYWNrYWdlKG9yZy5hcGFjaGUuY29tbW9ucy5odHRwY2xpZW50LmNvb2tpZSk7XG5pbXBvcnRQYWNrYWdlKG9yZy5hcGFjaGUuY29tbW9ucy5odHRwY2xpZW50Lm1ldGhvZHMpO1xuaW1wb3J0UGFja2FnZShvcmcuYXBhY2hlLmNvbW1vbnMuaHR0cGNsaWVudC5hdXRoKTtcbmltcG9ydFBhY2thZ2Uob3JnLmFwYWNoZS5jb21tb25zLmh0dHBjbGllbnQucHJvdG9jb2wpO1xuaW1wb3J0Q2xhc3Mob3JnLmFwYWNoZS5jb21tb25zLmh0dHBjbGllbnQucHJvdG9jb2wuU2VjdXJlUHJvdG9jb2xTb2NrZXRGYWN0b3J5KTtcbmltcG9ydFBhY2thZ2UoY29tLmNsb3VwaWEubGliLmNJYWFTLnZjZC5hcGkpO1xuXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vXG4vLyAgICAgICAgQXV0aG9yOiBSdXNzIFdoaXRlYXIgKHJ3aGl0ZWFyQGNpc2NvLmNvbSlcbi8vXG4vLyBGdW5jdGlvbiBOYW1lOiBodHRwUmVxdWVzdCgpXG4vL1xuLy8gICAgICAgVmVyc2lvbjogMy4wXG4vL1xuLy8gTW9kaWZpY2F0aW9uczogQWRkZWQgSFRUUCBoZWFkZXIgQ29ubmVjdGlvbjpjbG9zZSB0byBleGVjdXRlIG1ldGhvZCB0byBvdmVyY29tZSB0aGVcbi8vICAgICAgICAgICAgICAgIENMT1NFX1dBSVQgaXNzdWUgY2F1c2VkIHdpdGggcmVsZWFzZUNvbm5lY3Rpb24oKS5cbi8vXG4vLyAgICAgICAgICAgICAgICBNb2RpZmllZCBTU0wgc29ja2V0IGZhY3RvcnkgY29kZSB0byB3b3JrIHdpdGggVUNTIERpcmVjdG9yIDUuNC4wLjAuXG4vL1xuLy8gICBEZXNjcmlwdGlvbjogSFRUUCBSZXF1ZXN0IGZ1bmN0aW9uIC0gaHR0cFJlcXVlc3QuXG4vL1xuLy8gICAgICAgICAgICAgICAgSSBoYXZlIG1hZGUgdGhlIGh0dHBDbGllbnQgZnVuY3Rpb25hbGl0eSBtb3JlIG9iamVjdCBsaWtlIGluIG9yZGVyIHRvXG4vLyAgICAgICAgICAgICAgICBtYWtlIGNsb3VwaWEgc2NyaXB0cyBtb3JlIHJlYWRhYmxlIHdoZW4gbWFraW5nIG1hbnkvbXVsdGlwbGUgSFRUUC9IVFRQU1xuLy8gICAgICAgICAgICAgICAgcmVxdWVzdHMgd2l0aGluIGEgc2luZ2xlIHNjcmlwdC5cbi8vXG4vLyAgICAgIFVzYWdlOiAxLiB2YXIgcmVxdWVzdCA9IG5ldyBodHRwUmVxdWVzdCgpOyAgICAgICAgICAgICAgICAgICAvLyBDcmVhdGUgbmV3IG9iamVjdC5cbi8vXG4vLyAgICAgICAgICAgICAyLiByZXF1ZXN0LnNldHVwKFwiMTkyLjE2OC4xMC4xMFwiLFwiaHR0cHNcIixcImFkbWluXCIsXCJjaXNjbzEyM1wiKTsgICAgICAvLyBTU0wuXG4vLyAgICAgICAgICBvcjogICByZXF1ZXN0LnNldHVwKFwiMTkyLjE2OC4xMC4xMFwiLFwiaHR0cFwiLFwiYWRtaW5cIixcImNpc2NvMTIzXCIpOyAgICAgICAvLyBIVFRQLlxuLy8gICAgICAgICAgb3I6ICAgcmVxdWVzdC5zZXR1cChcIjE5Mi4xNjguMTAuMTBcIixcImh0dHBzXCIpOyAgICAgICAgICAgLy8gU1NMLCBubyBiYXNpY0F1dGguXG4vLyAgICAgICAgICBvcjogICByZXF1ZXN0LnNldHVwKFwiMTkyLjE2OC4xMC4xMFwiLFwiaHR0cFwiKTsgICAgICAgICAgICAvLyBIVFRQLCBubyBiYXNpY0F1dGguXG4vL1xuLy8gICAgICAgICAgICAgMy4gcmVxdWVzdC5nZXRSZXF1ZXN0KFwiL1wiKTsgICAgICAgICAgICAgICAgICAgIC8vIEhUVFAgR0VUIChVUkkpLlxuLy8gICAgICAgICAgb3I6ICAgcmVxdWVzdC5wb3N0UmVxdWVzdChcIi9cIixcInNvbWUgYm9keSB0ZXh0XCIpOyAgLy8gSFRUUCBQT1NUIChVUkksQm9keVRleHQpLlxuLy8gICAgICAgICAgb3I6ICAgcmVxdWVzdC5kZWxldGVSZXF1ZXN0KFwiL1wiKTsgICAgICAgICAgICAgICAgIC8vIEhUVFAgREVMRVRFIChVUkkpLlxuLy9cbi8vICAob3B0aW9uYWwpIDQuIHJlcXVlc3QuY29udGVudFR5cGUoXCJqc29uXCIpOyAgICAgICAgICAgIC8vIEFkZCBDb250ZW50LVR5cGUgSFRUUCBoZWFkZXIuXG4vLyAgICAgICAgICBvcjogICByZXF1ZXN0LmNvbnRlbnRUeXBlKFwieG1sXCIpO1xuLy9cbi8vICAob3B0aW9uYWwpIDUuIHJlcXVlc3QuYWRkSGVhZGVyKFwiWC1DbG91cGlhLVJlcXVlc3QtS2V5XCIsXCIxMjM0NTY3ODkwXCIpOyAgLy8gQW55IEhlYWRlci5cbi8vXG4vLyAgICAgICAgICAgICA2LiB2YXIgc3RhdHVzQ29kZSA9IHJlcXVlc3QuZXhlY3V0ZSgpOyAgICAgICAgICAgICAgICAgICAgIC8vIFNlbmQgcmVxdWVzdC5cbi8vXG4vLyAgICAgICAgICAgICA3LiB2YXIgcmVzcG9uc2UgPSByZXF1ZXN0LmdldFJlc3BvbnNlKFwiYXNTdHJpbmdcIik7ICAgLy8gUmVzcG9uc2UgYXMgc3RyaW5nLlxuLy8gICAgICAgICAgb3I6ICAgdmFyIHJlc3BvbnNlID0gcmVxdWVzdC5nZXRSZXNwb25zZShcImFzU3RyZWFtXCIpOyAgIC8vIFJlc3BvbnNlIGFzIHN0cmVhbS5cbi8vXG4vLyAgICAgICAgICAgICA4LiByZXF1ZXN0LmRpc2Nvbm5lY3QoKTsgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFJlbGVhc2UgY29ubmVjdGlvbi5cbi8vXG4vL1xuLy8gICAgICAgICAgTm90ZTogQmUgc3VyZSB0byBhZGQgdGhlc2UgbGluZXMgdG8gdGhlIHRvcCBvZiB5b3VyIHNjcmlwdDpcbi8vXG4vLyAgICAgICAgICBpbXBvcnRQYWNrYWdlKGphdmEudXRpbCk7XG4vLyAgICAgICAgICBpbXBvcnRQYWNrYWdlKGNvbS5jbG91cGlhLmxpYi51dGlsKTtcbi8vICAgICAgICAgIGltcG9ydFBhY2thZ2Uob3JnLmFwYWNoZS5jb21tb25zLmh0dHBjbGllbnQpO1xuLy8gICAgICAgICAgaW1wb3J0UGFja2FnZShvcmcuYXBhY2hlLmNvbW1vbnMuaHR0cGNsaWVudC5jb29raWUpO1xuLy8gICAgICAgICAgaW1wb3J0UGFja2FnZShvcmcuYXBhY2hlLmNvbW1vbnMuaHR0cGNsaWVudC5tZXRob2RzKTtcbi8vICAgICAgICAgIGltcG9ydFBhY2thZ2Uob3JnLmFwYWNoZS5jb21tb25zLmh0dHBjbGllbnQuYXV0aCk7XG4vLyAgICAgICAgICBpbXBvcnRQYWNrYWdlKG9yZy5hcGFjaGUuY29tbW9ucy5odHRwY2xpZW50LnByb3RvY29sKTtcbi8vICAgICAgICAgIGltcG9ydENsYXNzKG9yZy5hcGFjaGUuY29tbW9ucy5odHRwY2xpZW50LnByb3RvY29sLlNlY3VyZVByb3RvY29sU29ja2V0RmFjdG9yeSk7XG4vLyAgICAgICAgICBpbXBvcnRQYWNrYWdlKGNvbS5jbG91cGlhLmxpYi5jSWFhUy52Y2QuYXBpKTtcbi8vXG4vLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cblxudmFyIGh0dHBSZXF1ZXN0ID0gZnVuY3Rpb24gKCkge307XG5cbmh0dHBSZXF1ZXN0LnByb3RvdHlwZS5zZXR1cCA9IGZ1bmN0aW9uKHNlcnZlcklwLCB0cmFuc3BvcnQsIHVzZXJuYW1lLCBwYXNzd29yZCkge1xuICAgIHRoaXMuc2VydmVySXAgPSBzZXJ2ZXJJcDtcbiAgICB0aGlzLnRyYW5zcG9ydCA9IHRyYW5zcG9ydDtcbiAgICB0aGlzLnVzZXJuYW1lID0gdXNlcm5hbWU7XG4gICAgdGhpcy5wYXNzd29yZCA9IHBhc3N3b3JkO1xuXG4gICAgdGhpcy5odHRwQ2xpZW50ID0gbmV3IEh0dHBDbGllbnQoKTtcblxuICAgIC8vIERlY2lkZSB3aGV0aGVyIHRvIGNyZWF0ZSBhbiBIVFRQIG9yIEhUVFBTIGNvbm5lY3Rpb24gYmFzZWQgdXAgXCd0cmFuc3BvcnRcJy5cbiAgICBpZiggdGhpcy50cmFuc3BvcnQgPT0gXCJodHRwc1wiICkge1xuXHRcdHRoaXMuaHR0cENsaWVudCA9IEN1c3RvbUVhc3lTU0xTb2NrZXRGYWN0b3J5LmdldElnbm9yZVNTTENsaWVudCh0aGlzLnNlcnZlcklwLCA0NDMpO1xuXG4gICAgICAgIC8vIFNldCBwcm94eSBjb25maWd1cmF0aW9uIGlmIHByb3h5IGluZm8gaGFzIGJlZW4gcGFzc2VkIHRvIHRoZSB0YXNrXG4gICAgICAgIGlmIChwcm94eUhvc3QpIHtcbiAgICAgICAgICAgIGxvZ2dlci5hZGRJbmZvKFwiUHJveHkgY29uZmlndXJhdGlvbiBoYXMgYmVlbiBwYXNzZWQsIGFkZGluZyAtIFwiK3Byb3h5SG9zdCtcIjpcIitwcm94eVBvcnQpO1xuICAgICAgICAgICAgdGhpcy5odHRwQ2xpZW50LmdldEhvc3RDb25maWd1cmF0aW9uKCkuc2V0UHJveHkocHJveHlIb3N0LCBwcm94eVBvcnQpO1xuICAgICAgICB9XG5cblx0XHR0aGlzLmh0dHBDbGllbnQuZ2V0UGFyYW1zKCkuc2V0Q29va2llUG9saWN5KFwiZGVmYXVsdFwiKTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBDcmVhdGUgbmV3IEhUVFAgY29ubmVjdGlvbi5cbiAgICAgICAgdGhpcy5odHRwQ2xpZW50LmdldEhvc3RDb25maWd1cmF0aW9uKCkuc2V0SG9zdCh0aGlzLnNlcnZlcklwLCA4MCwgXCJodHRwXCIpO1xuICAgIH1cblxuICAgIHRoaXMuaHR0cENsaWVudC5nZXRQYXJhbXMoKS5zZXRDb29raWVQb2xpY3koXCJkZWZhdWx0XCIpO1xuXG4gICAgLy8gSWYgdXNlcm5hbWUgYW5kIHBhc3N3b3JkIHN1cHBsaWVkLCB0aGVuIHVzZSBiYXNpY0F1dGguXG4gICAgaWYoIHRoaXMudXNlcm5hbWUgJiYgdGhpcy5wYXNzd29yZCApIHtcbiAgICAgICAgdGhpcy5odHRwQ2xpZW50LmdldFBhcmFtcygpLnNldEF1dGhlbnRpY2F0aW9uUHJlZW1wdGl2ZSh0cnVlKTtcbiAgICAgICAgdGhpcy5kZWZhdWx0Y3JlZHMgPSBuZXcgVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWxzKHRoaXMudXNlcm5hbWUsIHRoaXMucGFzc3dvcmQpO1xuICAgICAgICB0aGlzLmh0dHBDbGllbnQuZ2V0U3RhdGUoKS5zZXRDcmVkZW50aWFscyhuZXcgQXV0aFNjb3BlKHRoaXMuc2VydmVySXAsIC0xLCBudWxsKSwgdGhpcy5kZWZhdWx0Y3JlZHMpO1xuICAgIH1cbn07XG5cbmh0dHBSZXF1ZXN0LnByb3RvdHlwZS5jb250ZW50VHlwZSA9IGZ1bmN0aW9uKGNvbnRlbnRUeXBlKSB7XG4gICAgdGhpcy5jb250ZW50VHlwZSA9IGNvbnRlbnRUeXBlO1xuXG4gICAgdGhpcy5jb250ZW50VHlwZXMgPSBbXG4gICAgICAgIFtcInhtbFwiLFwiYXBwbGljYXRpb24veG1sXCJdLFxuICAgICAgICBbXCJqc29uXCIsXCJhcHBsaWNhdGlvbi9qc29uXCJdXG4gICAgXTtcblxuICAgIGZvciggdGhpcy5pPTA7IHRoaXMuaTx0aGlzLmNvbnRlbnRUeXBlcy5sZW5ndGg7IHRoaXMuaSsrKVxuICAgICAgICBpZih0aGlzLmNvbnRlbnRUeXBlc1t0aGlzLmldWzBdID09IHRoaXMuY29udGVudFR5cGUpXG4gICAgICAgICAgICB0aGlzLmh0dHBNZXRob2QuYWRkUmVxdWVzdEhlYWRlcihcIkNvbnRlbnQtVHlwZVwiLCB0aGlzLmNvbnRlbnRUeXBlc1t0aGlzLmldWzFdKTtcbn07XG5cbmh0dHBSZXF1ZXN0LnByb3RvdHlwZS5hZGRIZWFkZXIgPSBmdW5jdGlvbihoZWFkZXJOYW1lLGhlYWRlclZhbHVlKSB7XG4gICAgdGhpcy5oZWFkZXJOYW1lID0gaGVhZGVyTmFtZTtcbiAgICB0aGlzLmhlYWRlclZhbHVlID0gaGVhZGVyVmFsdWU7XG5cbiAgICB0aGlzLmh0dHBNZXRob2QuYWRkUmVxdWVzdEhlYWRlcih0aGlzLmhlYWRlck5hbWUsIHRoaXMuaGVhZGVyVmFsdWUpO1xufTtcblxuaHR0cFJlcXVlc3QucHJvdG90eXBlLmV4ZWN1dGUgPSBmdW5jdGlvbigpIHtcbiAgICAvLyBDb25uZWN0aW9uOmNsb3NlIGlzIGhhcmQgY29kZWQgaGVyZSBpbiBvcmRlciB0byBlbnN1cmUgdGhhdCB0aGUgVENQIGNvbm5lY3Rpb25cbiAgICAvLyBnZXRzIHRvcm4gZG93biBpbW1lZGlhdGVseSBhZnRlciB0aGUgcmVxdWVzdC4gQ29tbWVudCB0aGlzIGxpbmUgb3V0IGlmIHlvdSB3aXNoIHRvXG4gICAgLy8gZXhwZXJpbWVudCB3aXRoIEhUVFAgcGVyc2lzdGVuY2UuXG4gICAgdGhpcy5odHRwTWV0aG9kLmFkZFJlcXVlc3RIZWFkZXIoXCJDb25uZWN0aW9uXCIsIFwiY2xvc2VcIik7XG5cbiAgICB0aGlzLmh0dHBDbGllbnQuZXhlY3V0ZU1ldGhvZCh0aGlzLmh0dHBNZXRob2QpO1xuXG4gICAgLy8gUmV0cmlldmUgc3RhdHVzIGNvZGUuXG4gICAgdGhpcy5zdGF0dXNDb2RlID0gdGhpcy5odHRwTWV0aG9kLmdldFN0YXR1c0NvZGUoKTtcblxuICAgIHJldHVybiB0aGlzLnN0YXR1c0NvZGU7XG59XG5cbmh0dHBSZXF1ZXN0LnByb3RvdHlwZS5nZXRSZXF1ZXN0ID0gZnVuY3Rpb24odXJpKSB7XG4gICAgdGhpcy51cmkgPSB1cmk7XG5cbiAgICAvLyBHZXQgcmVxdWVzdC5cbiAgICB0aGlzLmh0dHBNZXRob2QgPSBuZXcgR2V0TWV0aG9kKHRoaXMudXJpKTtcbn07XG5cbmh0dHBSZXF1ZXN0LnByb3RvdHlwZS5wb3N0UmVxdWVzdCA9IGZ1bmN0aW9uKHVyaSxib2R5dGV4dCkge1xuICAgIHRoaXMudXJpID0gdXJpO1xuICAgIHRoaXMuYm9keXRleHQgPSBib2R5dGV4dDtcblxuICAgIC8vIFBPU1QgUmVxdWVzdC5cbiAgICB0aGlzLmh0dHBNZXRob2QgPSBuZXcgUG9zdE1ldGhvZCh0aGlzLnVyaSk7XG4gICAgdGhpcy5odHRwTWV0aG9kLnNldFJlcXVlc3RFbnRpdHkobmV3IFN0cmluZ1JlcXVlc3RFbnRpdHkodGhpcy5ib2R5dGV4dCkpO1xufTtcblxuaHR0cFJlcXVlc3QucHJvdG90eXBlLmdldFJlc3BvbnNlID0gZnVuY3Rpb24oYXNUeXBlKSB7XG4gICAgdGhpcy5hc1R5cGUgPSBhc1R5cGU7XG5cbiAgICBpZiggdGhpcy5hc1R5cGUgPT0gXCJhc1N0cmVhbVwiIClcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cE1ldGhvZC5nZXRSZXNwb25zZUJvZHlBc1N0cmVhbSgpO1xuICAgIGVsc2VcbiAgICAgICAgcmV0dXJuIHRoaXMuaHR0cE1ldGhvZC5nZXRSZXNwb25zZUJvZHlBc1N0cmluZygpO1xufTtcblxuaHR0cFJlcXVlc3QucHJvdG90eXBlLmRlbGV0ZVJlcXVlc3QgPSBmdW5jdGlvbih1cmkpIHtcbiAgICB0aGlzLnVyaSA9IHVyaTtcblxuICAgIC8vIEdldCByZXF1ZXN0LlxuICAgIHRoaXMuaHR0cE1ldGhvZCA9IG5ldyBEZWxldGVNZXRob2QodGhpcy51cmkpO1xufTtcblxuaHR0cFJlcXVlc3QucHJvdG90eXBlLmRpc2Nvbm5lY3QgPSBmdW5jdGlvbigpIHtcbiAgICAvLyBSZWxlYXNlIGNvbm5lY3Rpb24uXG4gICAgdGhpcy5odHRwTWV0aG9kLnJlbGVhc2VDb25uZWN0aW9uKCk7XG59O1xuXG5cblxuZnVuY3Rpb24gc3RhdHVzQ2hlY2soc3RhdHVzQ29kZSkge1xuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gQXV0aG9yOiAgICAgIFJvYiBFZHdhcmRzIChAY2xpam9ja2V5L3JvYmVkd2FAY2lzY28uY29tKVxuICAvLyBEZXNjcmlwdGlvbjogQ2hlY2sgdGhlIHN0YXR1cyBjb2RlIGFmdGVyIFNwYXJrIEFQSSBjYWxsXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIGlmICgoc3RhdHVzQ29kZSA9PSAyMDApIHx8IChzdGF0dXNDb2RlID09IDIwNCkpIHtcbiAgICAgIGxvZ2dlci5hZGRJbmZvKFwiQWxsIGxvb2tzIGdvb2QuIEhUVFAgcmVzcG9uc2UgY29kZTogXCIrc3RhdHVzQ29kZSk7XG4gICAgICByZXR1cm5cbiAgfSBlbHNlIGlmIChzdGF0dXNDb2RlID09IDQwMCkge1xuICAgICAgICBsb2dnZXIuYWRkRXJyb3IoXCJGYWlsZWQgdG8gY29uZmlndXJlIFNwYXJrLiBIVFRQIHJlc3BvbnNlIGNvZGU6IFwiK3N0YXR1c0NvZGUpO1xuICAgICAgICBsb2dnZXIuYWRkSW5mbyhcIlJldHVybiBjb2RlIFwiK3N0YXR1c0NvZGUrXCI6IFRoZSByZXF1ZXN0IHdhcyBpbnZhbGlkIG9yIGNhbm5vdCBiZSBvdGhlcndpc2Ugc2VydmVkLiBBbiBhY2NvbXBhbnlpbmcgZXJyb3IgbWVzc2FnZSB3aWxsIGV4cGxhaW4gZnVydGhlci5cIik7XG4gICAgICAgIGxvZ2dlci5hZGRFcnJvcihcIlJlc3BvbnNlIHJlY2VpdmVkOiBcIityZXF1ZXN0LmdldFJlc3BvbnNlKFwiYXNTdHJpbmdcIikpO1xuICAgICAgICAvLyBTZXQgdGhpcyB0YXNrIGFzIGZhaWxlZC5cbiAgICAgICAgY3R4dC5zZXRGYWlsZWQoXCJSZXF1ZXN0IGZhaWxlZC5cIik7XG4gIH0gZWxzZSBpZiAoc3RhdHVzQ29kZSA9PSA0MDEpIHtcbiAgICAgIGxvZ2dlci5hZGRFcnJvcihcIkZhaWxlZCB0byBjb25maWd1cmUgU3BhcmsuIEhUVFAgcmVzcG9uc2UgY29kZTogXCIrc3RhdHVzQ29kZSk7XG4gICAgICBsb2dnZXIuYWRkSW5mbyhcIlJldHVybiBjb2RlIFwiK3N0YXR1c0NvZGUrXCI6IEF1dGhlbnRpY2F0aW9uIGNyZWRlbnRpYWxzIHdlcmUgbWlzc2luZyBvciBpbmNvcnJlY3QuXCIpO1xuICAgICAgbG9nZ2VyLmFkZEVyb3IoXCJSZXNwb25zZSByZWNlaXZlZDogXCIrcmVxdWVzdC5nZXRSZXNwb25zZShcImFzU3RyaW5nXCIpKTtcbiAgICAgIC8vIFNldCB0aGlzIHRhc2sgYXMgZmFpbGVkLlxuICAgICAgY3R4dC5zZXRGYWlsZWQoXCJSZXF1ZXN0IGZhaWxlZC5cIik7XG4gIH0gZWxzZSBpZiAoc3RhdHVzQ29kZSA9PSA0MDMpIHtcbiAgICAgIGxvZ2dlci5hZGRFcnJvcihcIkZhaWxlZCB0byBjb25maWd1cmUgU3BhcmsuIEhUVFAgcmVzcG9uc2UgY29kZTogXCIrc3RhdHVzQ29kZSk7XG4gICAgICBsb2dnZXIuYWRkSW5mbyhcIlJldHVybiBjb2RlIFwiK3N0YXR1c0NvZGUrXCI6IFRoZSByZXF1ZXN0IGlzIHVuZGVyc3Rvb2QsIGJ1dCBpdCBoYXMgYmVlbiByZWZ1c2VkIG9yIGFjY2VzcyBpcyBub3QgYWxsb3dlZC5cIik7XG4gICAgICBsb2dnZXIuYWRkRXJyb3IoXCJSZXNwb25zZSByZWNlaXZlZDogXCIrcmVxdWVzdC5nZXRSZXNwb25zZShcImFzU3RyaW5nXCIpKTtcbiAgICAgIC8vIFNldCB0aGlzIHRhc2sgYXMgZmFpbGVkLlxuICAgICAgY3R4dC5zZXRGYWlsZWQoXCJSZXF1ZXN0IGZhaWxlZC5cIik7XG4gIH0gZWxzZSBpZiAoc3RhdHVzQ29kZSA9PSA0MDQpIHtcbiAgICAgIGxvZ2dlci5hZGRFcnJvcihcIkZhaWxlZCB0byBjb25maWd1cmUgU3BhcmsuIEhUVFAgcmVzcG9uc2UgY29kZTogXCIrc3RhdHVzQ29kZSk7XG4gICAgICBsb2dnZXIuYWRkSW5mbyhcIlJldHVybiBjb2RlIFwiK3N0YXR1c0NvZGUrXCI6IFRoZSBVUkkgcmVxdWVzdGVkIGlzIGludmFsaWQgb3IgdGhlIHJlc291cmNlIHJlcXVlc3RlZCwgc3VjaCBhcyBhIHVzZXIsIGRvZXMgbm90IGV4aXN0LiBBbHNvIHJldHVybmVkIHdoZW4gdGhlIHJlcXVlc3RlZCBmb3JtYXQgaXMgbm90IHN1cHBvcnRlZCBieSB0aGUgcmVxdWVzdGVkIG1ldGhvZC5cIik7XG4gICAgICBsb2dnZXIuYWRkRXJyb3IoXCJSZXNwb25zZSByZWNlaXZlZDogXCIrcmVxdWVzdC5nZXRSZXNwb25zZShcImFzU3RyaW5nXCIpKTtcbiAgICAgIC8vIFNldCB0aGlzIHRhc2sgYXMgZmFpbGVkLlxuICAgICAgY3R4dC5zZXRGYWlsZWQoXCJSZXF1ZXN0IGZhaWxlZC5cIik7XG4gIH0gZWxzZSBpZiAoc3RhdHVzQ29kZSA9PSA0MDkpIHtcbiAgICAgIGxvZ2dlci5hZGRXYXJuKFwiRmFpbGVkIHRvIGNvbmZpZ3VyZSBTcGFyay4gSFRUUCByZXNwb25zZSBjb2RlOiBcIitzdGF0dXNDb2RlKTtcbiAgICAgIGxvZ2dlci5hZGRJbmZvKFwiUmV0dXJuIGNvZGUgXCIrc3RhdHVzQ29kZStcIjogVGhlIHJlcXVlc3QgY291bGQgbm90IGJlIHByb2Nlc3NlZCBiZWNhdXNlIGl0IGNvbmZsaWN0cyB3aXRoIHNvbWUgZXN0YWJsaXNoZWQgcnVsZSBvZiB0aGUgc3lzdGVtLiBGb3IgZXhhbXBsZSwgYSBwZXJzb24gbWF5IG5vdCBiZSBhZGRlZCB0byBhIHJvb20gbW9yZSB0aGFuIG9uY2UuXCIpO1xuICAgICAgbG9nZ2VyLmFkZEVycm9yKFwiUmVzcG9uc2UgcmVjZWl2ZWQ6IFwiK3JlcXVlc3QuZ2V0UmVzcG9uc2UoXCJhc1N0cmluZ1wiKSk7XG4gICAgICAvLyBTZXQgdGhpcyB0YXNrIGFzIGZhaWxlZC5cbiAgICAgIGN0eHQuc2V0RmFpbGVkKFwiUmVxdWVzdCBmYWlsZWQuXCIpO1xuICB9IGVsc2UgaWYgKHN0YXR1c0NvZGUgPT0gNTAwKSB7XG4gICAgICBsb2dnZXIuYWRkRXJyb3IoXCJGYWlsZWQgdG8gY29uZmlndXJlIFNwYXJrLiBIVFRQIHJlc3BvbnNlIGNvZGU6IFwiK3N0YXR1c0NvZGUpO1xuICAgICAgbG9nZ2VyLmFkZEluZm8oXCJSZXR1cm4gY29kZSBcIitzdGF0dXNDb2RlK1wiOiBTb21ldGhpbmcgd2VudCB3cm9uZyBvbiB0aGUgc2VydmVyLlwiKTtcbiAgICAgIGxvZ2dlci5hZGRFcnJvcihcIlJlc3BvbnNlIHJlY2VpdmVkOiBcIityZXF1ZXN0LmdldFJlc3BvbnNlKFwiYXNTdHJpbmdcIikpO1xuICAgICAgLy8gU2V0IHRoaXMgdGFzayBhcyBmYWlsZWQuXG4gICAgICBjdHh0LnNldEZhaWxlZChcIlJlcXVlc3QgZmFpbGVkLlwiKTtcbiAgfSBlbHNlIGlmIChzdGF0dXNDb2RlID09IDUwMSkge1xuICAgICAgbG9nZ2VyLmFkZEVycm9yKFwiRmFpbGVkIHRvIGNvbmZpZ3VyZSBTcGFyay4gSFRUUCByZXNwb25zZSBjb2RlOiBcIitzdGF0dXNDb2RlKTtcbiAgICAgIGxvZ2dlci5hZGRJbmZvKFwiUmV0dXJuIGNvZGUgXCIrc3RhdHVzQ29kZStcIjogU2VydmVyIGlzIG92ZXJsb2FkZWQgd2l0aCByZXF1ZXN0cy4gVHJ5IGFnYWluIGxhdGVyLlwiKTtcbiAgICAgIGxvZ2dlci5hZGRFcnJvcihcIlJlc3BvbnNlIHJlY2VpdmVkOiBcIityZXF1ZXN0LmdldFJlc3BvbnNlKFwiYXNTdHJpbmdcIikpO1xuICAgICAgLy8gU2V0IHRoaXMgdGFzayBhcyBmYWlsZWQuXG4gICAgICBjdHh0LnNldEZhaWxlZChcIlJlcXVlc3QgZmFpbGVkLlwiKTtcbiAgfSBlbHNlIHtcbiAgICAgIGxvZ2dlci5hZGRFcnJvcihcIkFuIHVua25vd24gcmVzcG9uc2UgY29kZSBoYXMgb2NjdXJlZCB0aGVyZWZvcmUgZXhpdGluZzogXCIrc3RhdHVzQ29kZSk7XG4gICAgICBjdHh0LnNldEZhaWxlZChcIlJlcXVlc3QgZmFpbGVkLlwiKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBjbGVhbihyZXNwb25zZSwgdG9DbGVhbikge1xuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gQXV0aG9yOiAgICAgIFJvYiBFZHdhcmRzIChAY2xpam9ja2V5L3JvYmVkd2FAY2lzY28uY29tKVxuICAvLyBEZXNjcmlwdGlvbjogQ2xlYW4gdXAgdGhlIHJlc3BvbnNlIGJ5IHN0cmlwcGluZyBvdXQgdGhlIGV4dHJhIFwiXCJcbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIHRoaXMucmVzcG9uc2UgPSByZXNwb25zZTtcbiAgdGhpcy50b0NsZWFuID0gdG9DbGVhbjtcblxuICBsb2dnZXIuYWRkSW5mbyhcIlJ1bm5pbmcgdGhyb3VnaCBhIGNsZWFuIHVwIHRvIG9udGFpbiB0aGUgXCIrdG9DbGVhbitcIiB2YWx1ZS5cIik7XG4gIHRoaXMuY2xlYW5lZCA9IG5ldyBTdHJpbmcoKTtcbiAgdGhpcy5jbGVhbmVkID0gSlNPTi5nZXRKc29uRWxlbWVudCh0aGlzLnJlc3BvbnNlLCB0aGlzLnRvQ2xlYW4pLnRvU3RyaW5nKCkucmVwbGFjZSgvXCIvZywgXCJcIik7XG4gIGxvZ2dlci5hZGRJbmZvKFwiVmFsdWUgY2xlYW5lZCB1cCwgcmV0dXJuaW5nIDpcIit0aGlzLmNsZWFuZWQpO1xuICByZXR1cm4gdGhpcy5jbGVhbmVkO1xufVxuXG5cblxuZnVuY3Rpb24gbWVzc2FnZVBvc3QodG9rZW4scm9vbUlkLG1lc3NhZ2UsZmlsZSkge1xuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbiAgLy8gQXV0aG9yOiAgICAgIFJvYiBFZHdhcmRzIChAY2xpam9ja2V5L3JvYmVkd2FAY2lzY28uY29tKVxuICAvLyBEZXNjcmlwdGlvbjogUG9zdCBhIG1lc3NhZ2UgaW50byBhIFNwYXJrIFJvb21cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gICAgdGhpcy5kZXN0aW5hdGlvbiA9IFwiYXBpLmNpc2Nvc3BhcmsuY29tXCI7XG4gICAgdGhpcy50b2tlbiA9IHRva2VuO1xuICAgIHRoaXMucm9vbUlkID0gcm9vbUlkO1xuICAgIHRoaXMubWVzc2FnZSA9IG1lc3NhZ2U7XG4gICAgdGhpcy5maWxlID0gZmlsZTtcblxuICAgIC8vIENvbnN0cnVjdCBKU09OOlxuICAgIHZhciBib2R5ID0gbmV3IEhhc2hNYXAoKTtcbiAgICBib2R5LnB1dChcInJvb21JZFwiLCByb29tSWQpO1xuXG4gICAgLy8gQ2hlY2sgaWYgdGhpcyB3aWxsIGJlIHBvc3RpbmcgYSBtZXNzYWdlIGFuZC9vciBmaWxlIHRvIHRoZSByb29tXG4gICAgaWYgKCFtZXNzYWdlLmVxdWFscyhcIlwiKSkge1xuICAgICAgYm9keS5wdXQoXCJ0ZXh0XCIsIG1lc3NhZ2UpO1xuICAgIH1cbiAgICBpZiAoIWZpbGUuZXF1YWxzKFwiXCIpKSB7XG4gICAgICBib2R5LnB1dChcImZpbGVcIiwgZmlsZSk7XG4gICAgfVxuICAgIHZhciBqc29uQm9keSA9IEpTT04uamF2YVRvSnNvblN0cmluZyhib2R5LCBib2R5LmdldENsYXNzKCkpO1xuICAgIGxvZ2dlci5hZGRJbmZvKFwiU2VuZGluZyBKU09OOiBcIiArIGpzb25Cb2R5KTtcblxuICAgIC8vIE1ha2UgUmVzdCBjYWxsXG4gICAgdmFyIHJlcXVlc3QgPSBuZXcgaHR0cFJlcXVlc3QoKTtcbiAgICByZXF1ZXN0LnNldHVwKHRoaXMuZGVzdGluYXRpb24sXCJodHRwc1wiKTtcbiAgICByZXF1ZXN0LnBvc3RSZXF1ZXN0KFwnL3YxL21lc3NhZ2VzXCcsIGpzb25Cb2R5KTtcbiAgICByZXF1ZXN0LmNvbnRlbnRUeXBlKFwianNvblwiKTtcbiAgICByZXF1ZXN0LmFkZEhlYWRlcihcIkF1dGhvcml6YXRpb25cIiwgdG9rZW4pO1xuXG4gICAgdmFyIHN0YXR1c0NvZGUgPSByZXF1ZXN0LmV4ZWN1dGUoKTtcbiAgICBzdGF0dXNDaGVjayhzdGF0dXNDb2RlKTtcblxuICAgIHRoaXMudmFsdWUgPSByZXF1ZXN0LmdldFJlc3BvbnNlKFwiYXNTdHJpbmdcIik7XG4gICAgbG9nZ2VyLmFkZEluZm8oXCJSYXcgcmV0dXJuZWQgdmF1bGVzOiBcIit0aGlzLnZhbHVlKTtcblxuICAgIHRoaXMubWVzc2FnZUlkID0gY2xlYW4odmFsdWUsIFwiaWRcIik7XG5cbiAgICByZXF1ZXN0LmRpc2Nvbm5lY3QoKTtcbiAgICByZXR1cm4gW21lc3NhZ2VJZF07XG59XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyVW5kb1Rhc2sodG9rZW4sbWVzc2FnZUlkKSB7XG4gICAgLy8gcmVnaXN0ZXIgdW5kbyB0YXNrXG4gICAgdmFyIHVuZG9IYW5kbGVyID0gXCJjdXN0b21fU3BhcmtfbWVzc2FnZXNfZGVsZXRlXCI7XG4gICAgdmFyIHVuZG9Db250ZXh0ID0gY3R4dC5jcmVhdGVJbm5lclRhc2tDb250ZXh0KHVuZG9IYW5kbGVyKTtcbiAgICB2YXIgdW5kb0NvbmZpZyA9IHVuZG9Db250ZXh0LmdldENvbmZpZ09iamVjdCgpO1xuXG4gICAgLy8gVGhlc2UgYXJlIHRoZSB2YXJpYWJsZXMgdGhhdCB0aGUgcm9sbGJhY2sgd2YgdGFzayBnZXRzIGNhbGxlZCB3aXRoLlxuICAgIHVuZG9Db25maWcudG9rZW4gPSB0b2tlbjtcbiAgICB1bmRvQ29uZmlnLm1lc3NhZ2VJZCA9IG1lc3NhZ2VJZDtcbiAgICB1bmRvQ29uZmlnLnByb3h5SG9zdCA9IHByb3h5SG9zdDtcbiAgICB1bmRvQ29uZmlnLnByb3h5UG9ydCA9IHByb3h5UG9ydDtcblxuICAgIGN0eHQuZ2V0Q2hhbmdlVHJhY2tlcigpLnVuZG9hYmxlUmVzb3VyY2VNb2RpZmllZChcIlJvbGxiYWNrIHBvc3QgbWVzc2FnZVwiLFxuICAgICAgICAgICAgICAgIFwiXCIsXCJyb2xsYmFjayBcIixcbiAgICAgICAgICAgICAgICBcIlJvbGxiYWNrIFwiK21lc3NhZ2VJZCtcIi5cIix1bmRvSGFuZGxlcix1bmRvQ29uZmlnKTtcbn1cblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8vIG1haW4oKTtcblxuLy8gV29ya2Zsb3cgSW5wdXRzLlxudmFyIHRva2VuID0gaW5wdXQudG9rZW47XG52YXIgbWVzc2FnZSA9IGlucHV0Lm1lc3NhZ2U7XG52YXIgZmlsZSA9IGlucHV0LmZpbGU7XG52YXIgcm9vbUlkID0gaW5wdXQucm9vbUlkO1xudmFyIHByb3h5SG9zdCA9IGlucHV0LnByb3h5SG9zdDtcbnZhciBwcm94eVBvcnQgPSBpbnB1dC5wcm94eVBvcnQ7XG5cbnZhciByZXN1bHQgPSBtZXNzYWdlUG9zdCh0b2tlbixyb29tSWQsbWVzc2FnZSxmaWxlKTtcbmxvZ2dlci5hZGRJbmZvKFwiVGVzdGluZyByZXR1cm46IFwiK3Jlc3VsdCk7XG5cbmlmIChyZXN1bHQpXG4gICAgbG9nZ2VyLmFkZEluZm8oXCJTdWNjZXNzZnVsbHkgcG9zdGVkIG1lc3NhZ2VcIik7XG4gICAgb3V0cHV0Lm1lc3NhZ2VJZCA9IHJlc3VsdFswXTtcblxuXG4vLyBSZWdpc3RlciByb2xsYmFjayB0YXNrLCB0aGlzIGlzIGFuIG9wdGlvbmFsIHNldHRpbmcuXG5pZiAoaW5wdXQucm9sbGJhY2sgPT0gMSkge1xuICAgIHJlZ2lzdGVyVW5kb1Rhc2sodG9rZW4scmVzdWx0WzBdKTtcbiAgICBsb2dnZXIuYWRkSW5mbyhcIlRoZSByb2xsYmFjayBvcHRpb24gaGFzIGJlZW4gZW5hYmxlZCwgeW91IHdpbGwgYmUgYWJsZSB0byByb2xsYmFjayB0byBwb3Rpbmcgb2YgdGhlIG1lc3NhZ2UuXCIpO1xufSBlbHNlIHtcbiAgICBsb2dnZXIuYWRkSW5mbyhcIllvdSB3aWxsIG5vdCBiZSBhYmxlIHRvIHJvbGxiYWNrIHRoZSBwb3N0IG1lc3NhZ2UgdGFzayBkdWUgdG8gXCdubyByb2xsYmFja1wnIGJlaW5nIHNlbGVjdGVkLlwiKTtcbn1cbiIsImNvbnRyb2xsZXJJbXBsIjp7Imxpc3QiOltdLCJtb1R5cGVOYW1lIjoiY29tLmNsb3VwaWEubGliLmNNYWNyb1VJLk1hY3JvQ29udHJvbGxlclNjcmlwdCIsInZhbGlkYXRvck5hbWUiOm51bGx9fQ=="}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"Spark_messages_details","taskLabel":"Details from Spark message","isActive":true,"taskSummary":"Details of Spark message\n","taskDescription":"Details of a Spark message\n","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 4 inputs\r\n   token (Label: \'token\', Type: text, MappableType: gen_text_input)\r\n   messageId (Label: \'messageId\', Type: text, MappableType: gen_text_input)\r\n   proxyHost (Label: \'proxyHost\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'proxyPort\', Type: text, MappableType: gen_text_input)\r\n\r\nTask contains 8 outputs\r\n   roomId (Description: \'roomId\', Type: gen_text_input)\r\n   personId (Description: \'personId\', Type: gen_text_input)\r\n   personEmail (Description: \'personEmail\', Type: gen_text_input)\r\n   text (Description: \'text\', Type: gen_text_input)\r\n   files (Description: \'files\', Type: gen_text_input)\r\n   toPersonId (Description: \'toPersonId\', Type: gen_text_input)\r\n   toPersonEmail (Description: \'toPersonEmail\', Type: gen_text_input)\r\n   created (Description: \'created\', Type: gen_text_input)\r\n\r\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"Spark_membership_delete","taskLabel":"Delete person from a group","isActive":true,"taskSummary":"","taskDescription":"","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 4 inputs\r\n   token (Label: \'token\', Type: text, MappableType: gen_text_input)\r\n   membershipId (Label: \'membershipID\', Type: text, MappableType: gen_text_input)\r\n   proxyHost (Label: \'proxyHost\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'proxyPort\', Type: text, MappableType: gen_text_input)\r\n\r\nTask contains 0 outputs\r\n\r\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"Spark_membership_details","taskLabel":"Details of Spark membership","isActive":true,"taskSummary":"Get details for a membership by ID.","taskDescription":"Get details for a membership by ID.","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 4 inputs\r\n   token (Label: \'token\', Type: text, MappableType: gen_text_input)\r\n   membershipId (Label: \'membershipId\', Type: text, MappableType: gen_text_input)\r\n   proxyHost (Label: \'proxyHost\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'proxyPort\', Type: text, MappableType: gen_text_input)\r\n\r\nTask contains 6 outputs\r\n   roomId (Description: \'roomId\', Type: gen_text_input)\r\n   personId (Description: \'personId\', Type: gen_text_input)\r\n   personEmail (Description: \'personEmail\', Type: gen_text_input)\r\n   isModerator (Description: \'isModerator\', Type: gen_text_input)\r\n   isMonitor (Description: \'isMonitor\', Type: gen_text_input)\r\n   created (Description: \'created\', Type: gen_text_input)\r\n\r\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><UnifiedFeatureAssetInfo><addiInfo></addiInfo><featureAssetEntry><data><![CDATA[{"taskName":"Spark_people_details","taskLabel":"Details of a person/user","isActive":true,"taskSummary":"Shows details for a person, by ID.","taskDescription":"Shows details for a person, by ID.","taskDetails":"\r\n<------- Task Information ------->\r\nTask contains 4 inputs\r\n   token (Label: \'token\', Type: text, MappableType: gen_text_input)\r\n   personId (Label: \'personId\', Type: text, MappableType: gen_text_input)\r\n   proxyHost (Label: \'proxyHost\', Type: text, MappableType: gen_text_input)\r\n   proxyPort (Label: \'proxyPort\', Type: text, MappableType: gen_text_input)\r\n\r\nTask contains 4 outputs\r\n   emails (Description: \'emails\', Type: gen_text_input)\r\n   displayName (Description: \'displayName\', Type: gen_text_input)\r\n   avatar (Description: \'avatar\', Type: gen_text_input)\r\n   created (Description: \'created\', Type: gen_text_input)\r\n\r\n","taskData":""}]]></data></featureAssetEntry><type>CUSTOM_TASKS</type></UnifiedFeatureAssetInfo><version>3.0</version></OrchExportInfo>